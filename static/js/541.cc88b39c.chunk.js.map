{"version":3,"file":"static/js/541.cc88b39c.chunk.js","mappings":"wPAEaA,E,OAAOC,GAAAA,GAAH,wD,SCAJC,EAAW,SAAC,GAA6B,IAAdC,EAAa,EAA1BC,UAAaD,KACtC,OACE,yBACGA,EAAKE,OAAS,GACb,wBACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,UAACV,EAAD,YACE,gBACEW,IACEF,EAAY,0CAC2BA,GACnC,iGAENG,IAAKJ,EACLK,MAAM,KACNC,OAAO,QAET,4BACE,uBAAIN,KACJ,uCAAeE,UAbRH,EADH,OAoBZ,oDAIP,E,SCCD,EA3BiB,WACf,OAAkCQ,EAAAA,EAAAA,UAAS,MAA3C,eAAOX,EAAP,KAAkBY,EAAlB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAdAE,QAAQC,IAAIP,IACZQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,WAAML,GAAN,8EACfH,GAAa,GADE,kBAGcS,EAAAA,EAAAA,eAAyBN,GAHvC,OAGPO,EAHO,OAIbZ,EAAaY,GAJA,gDAMbR,EAAS,KAAMS,SANF,yDAAH,sDASdH,EAASL,EACV,GAAE,CAACA,KAGF,gCACGF,IAAS,mDACTf,IAAa,SAACF,EAAD,CAAUE,UAAWA,MAGxC,C,6FC7BK0B,EAAM,mCAECH,EAAY,CACjBI,YADiB,WACF,OAAD,qHACKC,EAAAA,GAAAA,IAAA,gEACoCF,IAFzC,cACZG,EADY,gBAKLA,EAASC,KAAKC,QALT,oFAMnB,EACKC,eARiB,SAQFf,GAAU,OAAD,qHACLW,EAAAA,GAAAA,IAAA,6CACiBX,EADjB,oBACoCS,EADpC,oBADK,cACtBG,EADsB,gBAIfA,EAASC,KAJM,oFAK7B,EACKG,mBAdiB,SAcEC,GAAa,OAAD,qHACZN,EAAAA,GAAAA,IAAA,4DACgCF,EADhC,iCAC4DQ,EAD5D,gCADY,cAC7BL,EAD6B,gBAItBA,EAASC,KAAKC,QAJQ,oFAKpC,EACKI,eApBiB,SAoBFlB,GAAU,OAAD,qHACLW,EAAAA,GAAAA,IAAA,6CACiBX,EADjB,4BAC4CS,EAD5C,oBADK,cACtBG,EADsB,gBAIfA,EAASC,KAJM,oFAK7B,EACKM,kBA1BiB,SA0BCnB,GAAU,OAAD,qHACRW,EAAAA,GAAAA,IAAA,6CACiBX,EADjB,4BAC4CS,EAD5C,2BADQ,cACzBG,EADyB,gBAIlBA,EAASC,KAJS,oFAKhC,E","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/CastPage.jsx","servises/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Info = styled.li`\n  display: flex;\n  gap: 10px;\n`;\n","import { Info } from './Cast.styled';\n\nexport const CastList = ({ movieInfo: { cast } }) => {\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <Info key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : 'https://st2.depositphotos.com/1898481/6448/i/600/depositphotos_64486573-stock-photo-people.jpg'\n                }\n                alt={name}\n                width=\"50\"\n                height=\"75\"\n              />\n              <div>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </div>\n            </Info>\n          ))}\n        </ul>\n      ) : (\n        <p>We have no more details</p>\n      )}\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from '../components/Cast/Cast';\nimport { MoviesAPI } from '../servises/Api';\n\nconst CastPage = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  console.log(isLoading);\n  useEffect(() => {\n    const getMovie = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await MoviesAPI.fetchMovieCast(movieId);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <p>We have no more details</p>}\n      {movieInfo && <CastList movieInfo={movieInfo} />}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\nconst KEY = '409be53f0690f3671d041d97004c0d68';\n\nexport const MoviesAPI = {\n  async fetchMovies() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    );\n\n    return await response.data.results;\n  },\n  async fetchMovieById(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieBySearch(searchTerm) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieCast(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return await response.data;\n  },\n};\n"],"names":["Info","styled","CastList","cast","movieInfo","length","map","id","name","profile_path","character","src","alt","width","height","useState","setMovieInfo","isLoading","setIsLoading","error","setError","movieId","useParams","console","log","useEffect","getMovie","MoviesAPI","movieDetails","message","KEY","fetchMovies","axios","response","data","results","fetchMovieById","fetchMovieBySearch","searchTerm","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}