{"version":3,"file":"static/js/680.582d90cd.chunk.js","mappings":"kOAiDA,UA5CiB,WACf,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAnBAC,QAAQC,IAAIP,IACZQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBR,GAAa,GADG,kBAGeS,EAAAA,EAAAA,cAHf,WAGRC,EAHQ,QAIMC,OAJN,sBAKN,IAAIC,MAAM,gDALJ,OAOdd,EAAeY,GAPD,kDASdR,EAAS,KAAMW,SATD,yBAWdb,GAAa,GAXC,6EAAH,qDAcfQ,GACD,GAAE,KAGD,gCACGP,IAAS,oCACPJ,EAAYc,SACb,iCACE,4CACA,wBACGd,EAAYiB,KAAI,SAAAC,GAAK,eACpB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAAhD,6BACGY,EAAMK,qBADT,QAC0BL,EAAMM,aADhC,QACyCN,EAAMO,QAFxCP,EAAME,GADK,WAYjC,C,6FC/CKM,EAAM,mCAECd,EAAY,CACjBe,YADiB,WACF,OAAD,qHACKC,EAAAA,GAAAA,IAAA,gEACoCF,IAFzC,cACZG,EADY,gBAKLA,EAASC,KAAKC,QALT,oFAMnB,EACKC,eARiB,SAQFC,GAAU,OAAD,qHACLL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,oBACoCP,EADpC,oBADK,cACtBG,EADsB,gBAIfA,EAASC,KAJM,oFAK7B,EACKI,mBAdiB,SAcEC,GAAa,OAAD,qHACZP,EAAAA,GAAAA,IAAA,4DACgCF,EADhC,iCAC4DS,EAD5D,gCADY,cAC7BN,EAD6B,gBAItBA,EAASC,KAAKC,QAJQ,oFAKpC,EACKK,eApBiB,SAoBFH,GAAU,OAAD,qHACLL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,4BAC4CP,EAD5C,oBADK,cACtBG,EADsB,gBAIfA,EAASC,KAJM,oFAK7B,EACKO,kBA1BiB,SA0BCJ,GAAU,OAAD,qHACRL,EAAAA,GAAAA,IAAA,6CACiBK,EADjB,4BAC4CP,EAD5C,2BADQ,cACzBG,EADyB,gBAIlBA,EAASC,KAJS,oFAKhC,E","sources":["pages/HomePage/HomePage.jsx","servises/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { MoviesAPI } from '../../servises/Api';\n\nconst HomePage = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log(isLoading);\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const moviesResponse = await MoviesAPI.fetchMovies();\n        if (!moviesResponse.length) {\n          throw new Error(\"We don't have any information on this movie.\");\n        }\n        setTrendMovies(moviesResponse);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      {error && <p>Sorry.</p>}\n      {!!trendMovies.length && (\n        <>\n          <h2>Trending today</h2>\n          <ul>\n            {trendMovies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.original_name ?? movie.title ?? movie.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\nconst KEY = '409be53f0690f3671d041d97004c0d68';\n\nexport const MoviesAPI = {\n  async fetchMovies() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    );\n\n    return await response.data.results;\n  },\n  async fetchMovieById(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieBySearch(searchTerm) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchTerm}&page=1&include_adult=false`\n    );\n    return await response.data.results;\n  },\n  async fetchMovieCast(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n    return await response.data;\n  },\n  async fetchMovieReviews(movieId) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return await response.data;\n  },\n};\n"],"names":["useState","trendMovies","setTrendMovies","isLoading","setIsLoading","error","setError","location","useLocation","console","log","useEffect","getMovies","MoviesAPI","moviesResponse","length","Error","message","map","movie","to","id","state","from","original_name","title","name","KEY","fetchMovies","axios","response","data","results","fetchMovieById","movieId","fetchMovieBySearch","searchTerm","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}